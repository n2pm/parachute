plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version

mod_version = project.mod_version
if (!project.hasProperty("dist")) {
	mod_version = mod_version + "+" + new Date().format('yyyyMMdd.HHmmss') + "-SNAPSHOT"
}

version = mod_version
group = project.maven_group

repositories {
	maven { url "https://masa.dy.fi/maven" }
	maven { url 'https://maven.terraformersmc.com/releases/' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// probably a bad idea to jij this lol
	modApi include("fi.dy.masa.malilib:malilib-fabric-1.18.0:${project.malilib_version}")
	modImplementation include(fabricApi.module("fabric-networking-api-v1", "${project.fabric_version}"))

	modCompileOnly("com.terraformersmc:modmenu:${project.mod_menu_version}")
}

processResources {
	inputs.property "version", version

	filesMatching("fabric.mod.json") {
		expand project.properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
