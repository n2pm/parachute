plugins {
    id "maven-publish"
    alias(libs.plugins.quilt.loom)
    alias(libs.plugins.minotaur)
}

archivesBaseName = project.archives_base_name + "-" + libs.versions.minecraft.get()
version = project.version
group = project.maven_group

def build_release = System.getenv("BUILD_RELEASE") == "true"
def build_ci_commit = System.getenv("SHA")

version = project.mod_version + ""

if (!build_release) {
    version = project.mod_version + "+" + new Date().format("yyyyMMdd.HHmmss")
}

if (build_ci_commit != null) {
    version = project.mod_version + "+${build_ci_commit}"
}

repositories {
    maven { url "https://masa.dy.fi/maven" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.gegy.dev/" }
    maven { url "https://maven.svc.adryd.com/releases/" }
    mavenCentral()
}

dependencies {
    minecraft libs.minecraft
    mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }

    modImplementation libs.quilt.loader
    modImplementation libs.quilted.fabric.api

    implementation "com.github.bbottema:jetbrains-runtime-annotations:1.0.1"

    // probably a bad idea to jij this lol
    modApi include("fi.dy.masa.malilib:malilib-fabric-${libs.versions.minecraft.get()}:${libs.versions.malilib.get()}")
    modCompileOnly("com.terraformersmc:modmenu:${libs.versions.mod.menu.get()}")

    modApi include("com.adryd:cauldron:${libs.versions.cauldron.get()}")
}

processResources {
    inputs.property "version", version

    filesMatching("quilt.mod.json") {
        expand project.properties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

modrinth {
    syncBodyFrom = rootProject.file("README.md").text
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "parachute"
    versionNumber = version
    versionType = (System.getenv("MODRINTH_RELEASE") == "true") ? "release" : "beta"
    uploadFile = remapJar
    gameVersions = ["${libs.versions.minecraft.get()}"]
    loaders = ["quilt"]
    dependencies {
        required.project "qsl"
    }
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
